/home/tzhu38/miniconda3/envs/vid2seq/lib/python3.7/site-packages/transformers/models/t5/tokenization_t5.py:173: FutureWarning: This tokenizer was incorrectly instantiated with a model max length of 512 which will be corrected in Transformers v5.
For now, this behavior is kept to avoid breaking backwards compatibility when padding/encoding with `truncation is True`.
- Be aware that you SHOULD NOT rely on t5-base automatically truncating your input to 512 when padding/encoding.
- If you want to encode/pad to sequences longer than 512 you can either instantiate this tokenizer with `model_max_length` or pass `max_length` when encoding/padding.
- To avoid this warning, please instantiate this tokenizer with `model_max_length` set to your preferred value.
  FutureWarning,
load Vid2Seq model
tokenizer len:  32100
model len:  768
model len:  768
model len:  768
loading visual backbone
  0%|                                               | 0.00/890M [00:00<?, ?iB/s]  1%|▎                                     | 8.23M/890M [00:00<00:10, 86.3MiB/s]  2%|▊                                      | 19.4M/890M [00:00<00:08, 105MiB/s]  3%|█▎                                     | 30.6M/890M [00:00<00:08, 110MiB/s]  5%|█▊                                     | 41.7M/890M [00:00<00:07, 113MiB/s]  6%|██▎                                    | 52.9M/890M [00:00<00:07, 114MiB/s]  7%|██▊                                    | 64.0M/890M [00:00<00:07, 115MiB/s]  8%|███▎                                   | 75.3M/890M [00:00<00:07, 116MiB/s] 10%|███▊                                   | 86.4M/890M [00:00<00:07, 116MiB/s] 11%|████▎                                  | 97.6M/890M [00:00<00:07, 117MiB/s] 12%|████▉                                   | 109M/890M [00:01<00:07, 117MiB/s] 13%|█████▍                                  | 120M/890M [00:01<00:06, 117MiB/s] 15%|█████▉                                  | 131M/890M [00:01<00:07, 110MiB/s] 16%|██████▍                                 | 142M/890M [00:01<00:06, 112MiB/s] 17%|██████▉                                 | 154M/890M [00:01<00:06, 114MiB/s] 19%|███████▍                                | 165M/890M [00:01<00:06, 115MiB/s] 20%|███████▉                                | 176M/890M [00:01<00:06, 115MiB/s] 21%|████████▍                               | 187M/890M [00:01<00:06, 115MiB/s] 22%|████████▉                               | 198M/890M [00:01<00:06, 116MiB/s] 24%|█████████▍                              | 209M/890M [00:01<00:06, 117MiB/s] 25%|█████████▉                              | 221M/890M [00:02<00:06, 117MiB/s] 26%|██████████▍                             | 232M/890M [00:02<00:05, 117MiB/s] 27%|██████████▉                             | 243M/890M [00:02<00:05, 117MiB/s] 29%|███████████▍                            | 254M/890M [00:02<00:05, 117MiB/s] 30%|███████████▉                            | 265M/890M [00:02<00:05, 117MiB/s] 31%|████████████▍                           | 277M/890M [00:02<00:05, 117MiB/s] 32%|████████████▉                           | 288M/890M [00:02<00:05, 117MiB/s] 34%|█████████████▍                          | 299M/890M [00:02<00:05, 117MiB/s] 35%|█████████████▉                          | 310M/890M [00:02<00:05, 117MiB/s] 36%|██████████████▍                         | 322M/890M [00:02<00:05, 117MiB/s] 37%|██████████████▉                         | 333M/890M [00:03<00:04, 117MiB/s] 39%|███████████████▍                        | 344M/890M [00:03<00:04, 117MiB/s] 40%|███████████████▉                        | 355M/890M [00:03<00:04, 117MiB/s] 41%|████████████████▍                       | 366M/890M [00:03<00:04, 117MiB/s] 42%|████████████████▉                       | 377M/890M [00:03<00:04, 117MiB/s] 44%|█████████████████                      | 389M/890M [00:03<00:08, 60.5MiB/s] 45%|█████████████████▌                     | 400M/890M [00:03<00:07, 70.3MiB/s] 46%|█████████████████▉                     | 411M/890M [00:04<00:06, 79.4MiB/s] 47%|██████████████████▍                    | 421M/890M [00:04<00:05, 87.3MiB/s] 49%|██████████████████▉                    | 432M/890M [00:04<00:05, 94.1MiB/s] 50%|███████████████████▍                   | 443M/890M [00:04<00:04, 99.4MiB/s] 51%|████████████████████▍                   | 454M/890M [00:04<00:04, 103MiB/s] 52%|████████████████████▉                   | 465M/890M [00:04<00:04, 106MiB/s] 54%|█████████████████████▍                  | 476M/890M [00:04<00:03, 109MiB/s] 55%|█████████████████████▉                  | 487M/890M [00:04<00:03, 110MiB/s] 56%|██████████████████████▍                 | 498M/890M [00:04<00:03, 112MiB/s] 57%|██████████████████████▉                 | 509M/890M [00:04<00:03, 112MiB/s] 58%|███████████████████████▍                | 520M/890M [00:05<00:03, 113MiB/s] 60%|███████████████████████▉                | 531M/890M [00:05<00:03, 114MiB/s] 61%|████████████████████████▎               | 542M/890M [00:05<00:03, 114MiB/s] 62%|████████████████████████▊               | 553M/890M [00:05<00:03, 114MiB/s] 63%|█████████████████████████▎              | 564M/890M [00:05<00:02, 114MiB/s] 65%|█████████████████████████▊              | 575M/890M [00:05<00:02, 114MiB/s] 66%|██████████████████████████▎             | 586M/890M [00:05<00:02, 114MiB/s] 67%|██████████████████████████▊             | 597M/890M [00:05<00:02, 114MiB/s] 68%|███████████████████████████▎            | 608M/890M [00:05<00:02, 114MiB/s] 70%|███████████████████████████▊            | 619M/890M [00:05<00:02, 114MiB/s] 71%|████████████████████████████▎           | 630M/890M [00:06<00:02, 114MiB/s] 72%|████████████████████████████▊           | 641M/890M [00:06<00:02, 111MiB/s] 73%|█████████████████████████████▎          | 651M/890M [00:06<00:02, 111MiB/s] 74%|█████████████████████████████▊          | 662M/890M [00:06<00:02, 113MiB/s] 76%|██████████████████████████████▎         | 673M/890M [00:06<00:02, 113MiB/s] 77%|██████████████████████████████▊         | 684M/890M [00:06<00:01, 113MiB/s] 78%|███████████████████████████████▏        | 695M/890M [00:06<00:01, 112MiB/s] 79%|███████████████████████████████▋        | 706M/890M [00:06<00:01, 113MiB/s] 81%|████████████████████████████████▎       | 717M/890M [00:06<00:01, 115MiB/s] 82%|████████████████████████████████▊       | 728M/890M [00:06<00:01, 115MiB/s] 83%|█████████████████████████████████▎      | 740M/890M [00:07<00:01, 116MiB/s] 84%|█████████████████████████████████▊      | 751M/890M [00:07<00:01, 116MiB/s] 86%|██████████████████████████████████▎     | 762M/890M [00:07<00:01, 117MiB/s] 87%|██████████████████████████████████▊     | 773M/890M [00:07<00:01, 117MiB/s] 88%|███████████████████████████████████▎    | 784M/890M [00:07<00:00, 117MiB/s] 89%|███████████████████████████████████▊    | 796M/890M [00:07<00:00, 117MiB/s] 91%|████████████████████████████████████▎   | 807M/890M [00:07<00:00, 117MiB/s] 92%|████████████████████████████████████▊   | 818M/890M [00:07<00:00, 117MiB/s] 93%|█████████████████████████████████████▎  | 829M/890M [00:07<00:00, 117MiB/s] 94%|█████████████████████████████████████▊  | 840M/890M [00:07<00:00, 117MiB/s] 96%|██████████████████████████████████████▎ | 852M/890M [00:08<00:00, 117MiB/s] 97%|██████████████████████████████████████▊ | 863M/890M [00:08<00:00, 117MiB/s] 98%|███████████████████████████████████████▎| 874M/890M [00:08<00:00, 117MiB/s] 99%|███████████████████████████████████████▊| 885M/890M [00:08<00:00, 111MiB/s]100%|████████████████████████████████████████| 890M/890M [00:08<00:00, 111MiB/s]2024-04-04 16:22:19.135280: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-04-04 16:22:30.999396: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory
2024-04-04 16:22:31.000154: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory
2024-04-04 16:22:31.000195: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.

extracting visual features
visual features extracted
load ASR
ASR to tokens
forward to Vid2Seq
decode results
[]
